/**
 * Onfido API
 * The Onfido API is used to submit check requests.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'models/Address', 'models/Applicant', 'models/ApplicantsList', 'models/Check', 'models/CheckCreationRequest', 'models/ChecksList', 'models/Document', 'models/DocumentsList', 'models/Error', 'models/GenericAddress', 'models/GenericAddressesList', 'models/IdNumber', 'models/LivePhoto', 'models/LivePhotosList', 'models/LiveVideo', 'models/LiveVideosList', 'models/Report', 'models/ReportType', 'models/ReportTypeGroup', 'models/ReportTypeGroupsList', 'models/ReportTypeOption', 'models/ReportsList', 'models/Webhook', 'models/WebhooksList', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./models/Address'), require('./models/Applicant'), require('./models/ApplicantsList'), require('./models/Check'), require('./models/CheckCreationRequest'), require('./models/ChecksList'), require('./models/Document'), require('./models/DocumentsList'), require('./models/Error'), require('./models/GenericAddress'), require('./models/GenericAddressesList'), require('./models/IdNumber'), require('./models/LivePhoto'), require('./models/LivePhotosList'), require('./models/LiveVideo'), require('./models/LiveVideosList'), require('./models/Report'), require('./models/ReportType'), require('./models/ReportTypeGroup'), require('./models/ReportTypeGroupsList'), require('./models/ReportTypeOption'), require('./models/ReportsList'), require('./models/Webhook'), require('./models/WebhooksList'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Address, Applicant, ApplicantsList, Check, CheckCreationRequest, ChecksList, Document, DocumentsList, Error, GenericAddress, GenericAddressesList, IdNumber, LivePhoto, LivePhotosList, LiveVideo, LiveVideosList, Report, ReportType, ReportTypeGroup, ReportTypeGroupsList, ReportTypeOption, ReportsList, Webhook, WebhooksList, DefaultApi) {
  'use strict';

  /**
   * The_Onfido_API_is_used_to_submit_check_requests_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Onfido = require('index'); // See note below*.
   * var xxxSvc = new Onfido.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Onfido.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Onfido.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Onfido.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.6.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Address model constructor.
     * @property {module:models/Address}
     */
    Address: Address,
    /**
     * The Applicant model constructor.
     * @property {module:models/Applicant}
     */
    Applicant: Applicant,
    /**
     * The ApplicantsList model constructor.
     * @property {module:models/ApplicantsList}
     */
    ApplicantsList: ApplicantsList,
    /**
     * The Check model constructor.
     * @property {module:models/Check}
     */
    Check: Check,
    /**
     * The CheckCreationRequest model constructor.
     * @property {module:models/CheckCreationRequest}
     */
    CheckCreationRequest: CheckCreationRequest,
    /**
     * The ChecksList model constructor.
     * @property {module:models/ChecksList}
     */
    ChecksList: ChecksList,
    /**
     * The Document model constructor.
     * @property {module:models/Document}
     */
    Document: Document,
    /**
     * The DocumentsList model constructor.
     * @property {module:models/DocumentsList}
     */
    DocumentsList: DocumentsList,
    /**
     * The Error model constructor.
     * @property {module:models/Error}
     */
    Error: Error,
    /**
     * The GenericAddress model constructor.
     * @property {module:models/GenericAddress}
     */
    GenericAddress: GenericAddress,
    /**
     * The GenericAddressesList model constructor.
     * @property {module:models/GenericAddressesList}
     */
    GenericAddressesList: GenericAddressesList,
    /**
     * The IdNumber model constructor.
     * @property {module:models/IdNumber}
     */
    IdNumber: IdNumber,
    /**
     * The LivePhoto model constructor.
     * @property {module:models/LivePhoto}
     */
    LivePhoto: LivePhoto,
    /**
     * The LivePhotosList model constructor.
     * @property {module:models/LivePhotosList}
     */
    LivePhotosList: LivePhotosList,
    /**
     * The LiveVideo model constructor.
     * @property {module:models/LiveVideo}
     */
    LiveVideo: LiveVideo,
    /**
     * The LiveVideosList model constructor.
     * @property {module:models/LiveVideosList}
     */
    LiveVideosList: LiveVideosList,
    /**
     * The Report model constructor.
     * @property {module:models/Report}
     */
    Report: Report,
    /**
     * The ReportType model constructor.
     * @property {module:models/ReportType}
     */
    ReportType: ReportType,
    /**
     * The ReportTypeGroup model constructor.
     * @property {module:models/ReportTypeGroup}
     */
    ReportTypeGroup: ReportTypeGroup,
    /**
     * The ReportTypeGroupsList model constructor.
     * @property {module:models/ReportTypeGroupsList}
     */
    ReportTypeGroupsList: ReportTypeGroupsList,
    /**
     * The ReportTypeOption model constructor.
     * @property {module:models/ReportTypeOption}
     */
    ReportTypeOption: ReportTypeOption,
    /**
     * The ReportsList model constructor.
     * @property {module:models/ReportsList}
     */
    ReportsList: ReportsList,
    /**
     * The Webhook model constructor.
     * @property {module:models/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WebhooksList model constructor.
     * @property {module:models/WebhooksList}
     */
    WebhooksList: WebhooksList,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
